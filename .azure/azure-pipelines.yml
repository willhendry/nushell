trigger:
  - master

strategy:
  matrix:
    linux-nightly:
      image: ubuntu-16.04
      canary: 'false'
    macos-nightly:
      image: macos-10.14
      canary: 'false'
    windows-nightly:
      image: vs2017-win2016
      canary: 'false'
    linux-nightly-canary:
      image: ubuntu-16.04
      canary: 'true'
    macos-nightly-canary:
      image: macos-10.14
      canary: 'true'
    windows-nightly-canary:
      image: vs2017-win2016
      canary: 'true'
    fmt:
      image: ubuntu-16.04
      testfmt: 'true'

pool:
  vmImage: $(image)

steps:
  - bash: |
      set -e
      if [ -e /etc/debian_version ]
      then
        sudo apt-get -y install libxcb-composite0-dev libx11-dev
      fi
      curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path --default-toolchain `cat rust-toolchain`
      export PATH=$HOME/.cargo/bin:$PATH
      rustc -Vv
      echo "##vso[task.prependpath]$HOME/.cargo/bin"
      rustup component add rustfmt --toolchain `cat rust-toolchain`
    displayName: Install Rust
  - bash: RUSTFLAGS="-D warnings" cargo test --all-features
    condition: eq(parameters.canary, 'true')
    displayName: Run tests
  - bash: NUSHELL_ENABLE_ALL_FLAGS=1 RUSTFLAGS="-D warnings" cargo test --all-features
    condition: eq(parameters.canary, 'false')
    displayName: Run tests
  - bash: cargo fmt --all -- --check
    condition: eq(parameters.fmt, 'true')
    displayName: Lint
